web_server: no

schedules:
  - tasks: [copy_series, copy_movies]
    interval:
      minutes: 30
  - tasks: [remove_complete_torrents]
    interval:
      hours: 24

templates:
  complete_downloads:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes

tasks:
  copy_series:
    priority: 1
    no_entries_ok: yes
    template: complete_downloads
    parsing:
      series: guessit
    all_series:
      parse_only: yes
    thetvdb_lookup: yes
    require_field: series_name
    copy:
      to: '/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}'
    exec: |
      sub_file=`find "{{ old_location|pathdir }}" -name "{{ title }}.srt" -o -name "{{ title }}.sub"`
      ext="${sub_file: -3}"
      if [ ! -z "${sub_file}" ]; then
        cp "${sub_file}" "/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}/{{ title }}.en.${ext}"
      fi

  copy_movies:
    priority: 1
    no_entries_ok: yes
    template: complete_downloads
    require_field: movie_name
    imdb_lookup: yes
    copy:
      to: '/storage/movies/{{ movie_name }} ({{ movie_year }})'
    exec: |
      sub_file=`find "{{ old_location|pathdir }}" -name "*.srt" -o -name "*.sub"`
      ext="${sub_file: -3}"
      if [ ! -z "${sub_file}" ]; then
        cp "${sub_file}" "/storage/movies/{{ movie_name }} ({{ movie_year }})/{{ title }}.en.${ext}"
      fi

  remove_complete_torrents:
    priority: 50
    no_entries_ok: yes
    from_transmission:
      host: transmission
      port: 9091
      username: admin
      password: "supersecret"
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 100: accept
    transmission:
      host: transmission
      port: 9091
      username: admin
      password: "supersecret"
      action: purge
