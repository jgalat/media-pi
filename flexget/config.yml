web_server: yes

schedules:
  - tasks: [sort_series, sort_movies]
    interval:
      minutes: 30
  - tasks: [get_subtitles]
    interval:
      hours: 1
  - tasks: [remove_complete_torrents]
    interval:
      hours: 2

templates:
  complete_downloads:
    filesystem:
      path: /downloads/complete
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes

tasks:
  sort_series:
    priority: 1
    no_entries_ok: yes
    template: complete_downloads
    parsing:
      series: guessit
    thetvdb_lookup: yes
    require_field: series_name
    all_series:
      parse_only: yes
    exec:
      auto_escape: yes
      on_output:
        for_entries: |
          if mediainfo "{{ location }}" | grep EAC3; then
            mkdir -p "/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}" && ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}/{{ tvdb_series_name }} - {{ series_id }}{{ location | pathext }}"
          else
            mkdir -p "/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}" && cp "{{ location }}" "/storage/series/{{ tvdb_series_name }}/Season {{ series_season }}/{{ tvdb_series_name }} - {{ series_id }}{{ location | pathext }}"
          fi

  sort_movies:
    priority: 1
    no_entries_ok: yes
    template: complete_downloads
    require_field: movie_name
    imdb_lookup: yes
    exec:
      auto_escape: yes
      on_output:
       for_entries: |
         if mediainfo "{{ location }}" | grep EAC3; then
           mkdir -p "/storage/movies/{{ movie_name }} ({{ movie_year }})" && ffmpeg -hwaccel auto -y -i "{{ location }}" -map 0 -c:s copy -c:v copy -c:a ac3 -b:a 640k "/storage/movies/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
         else
           mkdir -p "/storage/movies/{{ movie_name }} ({{ movie_year }})" && cp "{{ location }}" "/storage/movies/{{ movie_name }} ({{ movie_year }})/{{ movie_name }} ({{ movie_year }}){{ location | pathext }}"
         fi

  get_subtitles:
    priority: 10
    filesystem:
      path:
        - /storage/movies
        - /storage/series
      regexp: '.*\.(avi|mkv|mp4)$'
      recursive: yes
    accept_all: yes
    seen: local
    subliminal:
      languages:
        - en
      alternatives:
        - es
      exact_match: no
      providers:
        - addic7ed
        - opensubtitles
        - thesubdb
        - tvsubtitles
      single: no
      authentication:
        addic7ed:
          username: jgalat
          password: supersecret
        opensubtitles:
          username: jgalat
          password: supersecret

  remove_complete_torrents:
    priority: 50
    no_entries_ok: yes
    from_transmission:
      host: transmission
      port: 9091
      username: admin
      password: "123456"
    disable: [seen, seen_info_hash]
    if:
      - transmission_progress == 100: accept
    transmission:
      host: transmission
      port: 9091
      username: admin
      password: "123456"
      action: purge
